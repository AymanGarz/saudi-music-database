const CONFIG ={SHEET_ID: 'GOOGLE_SHEET_ID',API_KEY: 'GOOGLE_API_KEY',ARTISTS_SHEET: 'Saudi music community',OPPORTUNITIES_SHEET: 'Opportunities for YOU'};const PERFORMANCE_CONFIG ={DEBOUNCE_DELAY: 300,CACHE_TTL: 3 * 60 * 1000,MAX_CACHE_SIZE: 15 * 1024 * 1024,VIRTUAL_SCROLL_THRESHOLD: 100,REQUEST_TIMEOUT: 15000,BATCH_SIZE: 50};function validateConfig(){return !CONFIG.SHEET_ID || !CONFIG.API_KEY || CONFIG.SHEET_ID === 'GOOGLE_SHEET_ID' || CONFIG.API_KEY === 'GOOGLE_API_KEY' || CONFIG.SHEET_ID.trim().length < 20 || CONFIG.API_KEY.trim().length < 20;}async function fetchWithTimeout(url,timeoutMs = PERFORMANCE_CONFIG.REQUEST_TIMEOUT){const controller = new AbortController();const timeoutId = setTimeout(() => controller.abort(),timeoutMs);try{const response = await fetch(url,{signal: controller.signal,headers:{'Cache-Control': 'public,max-age=180'}});clearTimeout(timeoutId);return response;}catch (error){clearTimeout(timeoutId);if (error.name === 'AbortError'){throw new Error('Request timed out after ' + (timeoutMs / 1000) + ' seconds');}throw error;}}function isValidURL(text){if (!text || typeof text !== 'string') return false;const str = text.trim().toLowerCase();const dangerousProtocols = ['javascript:','data:','file:','vbscript:','about:'];if (dangerousProtocols.some(protocol => str.startsWith(protocol))){return false;}return str.includes('http: (str.includes('.') && (str.includes('.com') || str.includes('.org') || str.includes('.net') || str.includes('.io') || str.includes('.sa')));}function debounce(func,wait){let timeout;return function executedFunction(...args){const later = () =>{clearTimeout(timeout);func(...args);};clearTimeout(timeout);timeout = setTimeout(later,wait);};}const activeRequests = new Map();class DatabaseApp{constructor(){this.currentTab = 'database';this.isLoading = false;this.hasEventListeners = false;this.cache ={artists:{data: null,timestamp: null},opportunities:{data: null,timestamp: null}};this.COLUMN_COUNT = 8;this.visibleRows = new Set();this.currentSearchResults = null;this.performanceMetrics ={searchTime: 0,renderTime: 0,lastApiCall: 0};this.init();}init(){this.loadAllArtists();this.bindEventListeners();this.setupPerformanceMonitoring();}setupPerformanceMonitoring(){if ('PerformanceObserver' in window){const observer = new PerformanceObserver((list) =>{list.getEntries().forEach((entry) =>{if (entry.duration > 50){console.warn('Long task detected:',entry.duration + 'ms');}});});observer.observe({entryTypes: ['longtask']});}}bindEventListeners(){if (this.hasEventListeners) return;try{document.addEventListener('keypress',(e) =>{if (e.key === 'Enter' && this.currentTab === 'database'){this.performSearch();}});const debouncedSearch = debounce(() =>{if (this.currentTab === 'database'){this.performSearch();}},PERFORMANCE_CONFIG.DEBOUNCE_DELAY);document.addEventListener('input',(e) =>{if (e.target.matches('input[type="text"]')){debouncedSearch();}});document.addEventListener('paste',(e) =>{if (e.target.matches('input[type="text"]')){setTimeout(debouncedSearch,50);}});this.hasEventListeners = true;}catch (error){console.error('Error binding event listeners:',error);}}async fetchSheetData(sheetName){const cacheKey = `${sheetName}-${CONFIG.SHEET_ID}`;if (activeRequests.has(cacheKey)){return activeRequests.get(cacheKey);}try{if (validateConfig()){throw new Error('Google Sheets API configuration is missing or invalid');}const range = `${sheetName}!A:H`;const url = `https: const requestPromise = this.executeRequest(url,sheetName);activeRequests.set(cacheKey,requestPromise);const result = await requestPromise;activeRequests.delete(cacheKey);return result;}catch (error){activeRequests.delete(cacheKey);throw error;}}async executeRequest(url,sheetName){console.log('Fetching data from Google Sheets API...');this.performanceMetrics.lastApiCall = performance.now();const response = await fetchWithTimeout(url);if (!response.ok){const errorText = await response.text();console.error('API Error:',response.status,errorText);throw new Error(`Google Sheets API error: ${response.status}- ${errorText}`);}const data = await response.json();console.log('API response time:',performance.now() - this.performanceMetrics.lastApiCall + 'ms');if (data.values && data.values.length > 1){const rowsToSkip = sheetName === CONFIG.OPPORTUNITIES_SHEET ? 2 : 1;const processedData = data.values.slice(rowsToSkip) .filter(row => row && row[0] && String(row[0]).trim() !== '') .map(row =>{const paddedRow = new Array(this.COLUMN_COUNT);for (let i = 0;i < this.COLUMN_COUNT;i++){paddedRow[i] = row[i] || '';}return paddedRow;});console.log(`Successfully processed ${processedData.length}rows from ${sheetName}`);return processedData;}return [];}setCacheData(cacheType,data){const cache = this.cache[cacheType];const dataSize = JSON.stringify(data).length;if (dataSize > PERFORMANCE_CONFIG.MAX_CACHE_SIZE){console.warn(`Cache size exceeded for ${cacheType}: ${(dataSize / 1024 / 1024).toFixed(2)}MB`);return false;}cache.data = data;cache.timestamp = Date.now();console.log(`Cache updated for ${cacheType}: ${(dataSize / 1024).toFixed(2)}KB`);return true;}isCacheValid(cacheType){const cache = this.cache[cacheType];if (!cache.timestamp) return false;return (Date.now() - cache.timestamp) < PERFORMANCE_CONFIG.CACHE_TTL;}clearCache(){Object.keys(this.cache).forEach(key =>{this.cache[key] ={data: null,timestamp: null};});console.log('Cache cleared');}async loadAllArtists(){if (this.isLoading) return;try{this.isLoading = true;this.showLoading('results','Loading artists...');if (this.cache.artists.data && this.isCacheValid('artists')){console.log('Using cached artists data');this.displayResults(this.cache.artists.data,'results');return;}const data = await this.fetchSheetData(CONFIG.ARTISTS_SHEET);if (data && data.length > 0){console.log(`Successfully loaded ${data.length}artists from API`);this.setCacheData('artists',data);this.displayResults(data,'results');}else{throw new Error('No data received from Google Sheets API');}}catch (error){console.error('Error loading artists:',error);this.displayErrorWithRetry('Failed to load artists. Please check your connection.','results','artists');}finally{this.isLoading = false;}}async loadAllOpportunities(){if (this.isLoading) return;try{this.isLoading = true;this.showLoading('opportunities','Loading opportunities...');if (this.cache.opportunities.data && this.isCacheValid('opportunities')){console.log('Using cached opportunities data');this.displayResults(this.cache.opportunities.data,'opportunities');return;}const data = await this.fetchSheetData(CONFIG.OPPORTUNITIES_SHEET);if (data && data.length > 0){console.log(`Successfully loaded ${data.length}opportunities from API`);this.setCacheData('opportunities',data);this.displayResults(data,'opportunities');}else{throw new Error('No opportunities data received from Google Sheets API');}}catch (error){console.error('Error loading opportunities:',error);this.displayErrorWithRetry('Failed to load opportunities. Please check your connection.','opportunities','opportunities');}finally{this.isLoading = false;}}performSearch(){if (this.isLoading) return;const startTime = performance.now();try{const filters = [];let hasAnyFilter = false;for (let i = 0;i < this.COLUMN_COUNT;i++){const filterInput = document.getElementById('filter' + i);const filterValue = filterInput ? filterInput.value.trim() : '';filters.push(filterValue);if (filterValue !== ''){hasAnyFilter = true;}}if (!hasAnyFilter){this.loadAllArtists();return;}if (this.cache.artists.data && this.isCacheValid('artists')){const filtered = this.cache.artists.data.filter(row =>{for (let index = 0;index < filters.length;index++){const filter = filters[index];const trimmedFilter = String(filter || '').trim();if (trimmedFilter === '') continue;const cellValue = String(row[index] || '').toLowerCase();const filterValue = trimmedFilter.toLowerCase();const searchWords = filterValue.split(/\s+/).filter(word => word.length > 0);const hasAllWords = searchWords.every(searchWord => cellValue.includes(searchWord));if (!hasAllWords) return false;}return true;});this.performanceMetrics.searchTime = performance.now() - startTime;console.log('Search completed in:',this.performanceMetrics.searchTime + 'ms');this.currentSearchResults = filtered;this.displayResults(filtered,'results');}else{this.loadAllArtists();}}catch (error){console.error('Error in search:',error);this.displayError('Search failed. Please try again.','results');}}switchTab(tabName){try{document.querySelectorAll('.tab-content').forEach(tab =>{tab.classList.remove('active');});document.querySelectorAll('.tab-button').forEach(btn =>{btn.classList.remove('active');});const targetTab = document.getElementById(tabName + '-tab');if (targetTab){targetTab.classList.add('active');}const buttons = document.querySelectorAll('.tab-button');buttons.forEach(btn =>{if ((btn.textContent.includes('Artist') && tabName === 'database') || (btn.textContent.includes('Opportunities') && tabName === 'opportunities')){btn.classList.add('active');}});const subtitle = document.querySelector('.tab-subtitle');if (subtitle){subtitle.classList.toggle('show',tabName === 'database');}this.currentTab = tabName;if (tabName === 'opportunities'){this.loadAllOpportunities();}else{this.loadAllArtists();}}catch (error){console.error('Error switching tabs:',error);}}clearFilters(){try{for (let i = 0;i < this.COLUMN_COUNT;i++){const input = document.getElementById('filter' + i);if (input) input.value = '';}this.currentSearchResults = null;this.loadAllArtists();}catch (error){console.error('Error clearing filters:',error);}}showLoading(type,message){const content = type === 'opportunities' ? document.getElementById('opportunitiesContent') : document.getElementById('resultsContent');if (content){content.innerHTML = `<div class="loading">${message}</div>`;}}displayResults(data,type){const renderStart = performance.now();try{const isOpportunities = type === 'opportunities';const content = isOpportunities ? document.getElementById('opportunitiesContent') : document.getElementById('resultsContent');const counter = isOpportunities ? document.getElementById('opportunitiesCount') : document.getElementById('resultsCount');if (!content || !counter) return;if (!data || data.length === 0){const message = isOpportunities ? 'No opportunities available at the moment.' : 'No results found. Try adjusting your search criteria.';content.innerHTML = `<div class="no-results">${message}</div>`;counter.textContent = isOpportunities ? 'No Opportunities' : 'No Results';return;}const itemType = isOpportunities ? 'Opportunit' : 'Artist';const suffix = data.length !== 1 ? (isOpportunities ? 'ies' : 's') : (isOpportunities ? 'y' : '');counter.textContent = `${data.length}${itemType}${suffix}`;if (data.length > PERFORMANCE_CONFIG.VIRTUAL_SCROLL_THRESHOLD){this.createVirtualTable(content,data,isOpportunities);}else{this.createTable(content,data,isOpportunities);}this.performanceMetrics.renderTime = performance.now() - renderStart;console.log('Render completed in:',this.performanceMetrics.renderTime + 'ms');}catch (error){console.error('Error displaying results:',error);this.displayError('Error displaying results. Please try again.',type);}}createVirtualTable(container,data,isOpportunities){container.innerHTML = '';const virtualContainer = document.createElement('div');virtualContainer.style.maxHeight = '600px';virtualContainer.style.overflowY = 'auto';const table = document.createElement('table');table.className = 'results-table';this.createTableHeader(table,isOpportunities);const tbody = document.createElement('tbody');const initialBatch = Math.min(PERFORMANCE_CONFIG.BATCH_SIZE,data.length);for (let i = 0;i < initialBatch;i++){const row = this.createTableRow(data[i],isOpportunities);tbody.appendChild(row);}table.appendChild(tbody);virtualContainer.appendChild(table);if (data.length > initialBatch){this.lazyLoadRows(tbody,data.slice(initialBatch),isOpportunities);}container.appendChild(virtualContainer);}lazyLoadRows(tbody,remainingData,isOpportunities){const loadMore = () =>{const batch = remainingData.splice(0,PERFORMANCE_CONFIG.BATCH_SIZE);const fragment = document.createDocumentFragment();batch.forEach(rowData =>{const row = this.createTableRow(rowData,isOpportunities);fragment.appendChild(row);});tbody.appendChild(fragment);if (remainingData.length > 0){requestIdleCallback(() => loadMore());}};requestIdleCallback(() => loadMore());}createTable(container,data,isOpportunities){container.innerHTML = '';const table = document.createElement('table');table.className = 'results-table';this.createTableHeader(table,isOpportunities);const tbody = document.createElement('tbody');const fragment = document.createDocumentFragment();data.forEach(rowData =>{const row = this.createTableRow(rowData,isOpportunities);fragment.appendChild(row);});tbody.appendChild(fragment);table.appendChild(tbody);container.appendChild(table);}createTableHeader(table,isOpportunities){const thead = document.createElement('thead');const headerRow = document.createElement('tr');const headers = isOpportunities ? ['🎤 Name','👨‍🎨 Role','🎵 Genre','📱 Social media','📍 Location','🤝 Collaboration','🔗 Work links','📧 Email'] : ['🎤 Name / Stage Name','👨‍🎨 Role','🎵 Genre','📱 Social Media','📍 Location','🤝 Collaboration','🔗 Work Links','📧 Email'];headers.forEach(headerText =>{const th = document.createElement('th');th.textContent = headerText;headerRow.appendChild(th);});thead.appendChild(headerRow);table.appendChild(thead);}createTableRow(rowData,isOpportunities){const tr = document.createElement('tr');for (let i = 0;i < this.COLUMN_COUNT;i++){const td = document.createElement('td');const cellValue = rowData[i] || '';const cellText = String(cellValue).trim();if (this.isEmail(cellText)){this.createEmailLinks(cellText,td);}else if (this.isURL(cellText)){this.createWebLink(cellText,td);}else{td.textContent = cellText;}tr.appendChild(td);}return tr;}isURL(text){if (!text || typeof text !== 'string') return false;const str = text.trim();return str.includes('http: (str.includes('.') && (str.includes('.com') || str.includes('.org') || str.includes('.net') || str.includes('.io')));}isEmail(text){if (!text || typeof text !== 'string') return false;const emailRegex = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}/;return emailRegex.test(text);}createWebLink(url,container){if (!isValidURL(url)){container.textContent = url;return;}const link = document.createElement('a');link.href = url.startsWith('http') ? url : 'https: link.textContent = url.length > 30 ? url.substring(0,30) + '...' : url;link.target = '_blank';link.rel = 'noopener noreferrer';container.appendChild(link);}createEmailLinks(text,container){const emailRegex = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}/g;const emails = text.match(emailRegex) || [];if (emails.length === 0){container.textContent = text;return;}emails.forEach((email,index) =>{if (index > 0){container.appendChild(document.createTextNode(' '));}const link = document.createElement('a');link.href = `mailto:${email}`;link.textContent = email;link.target = '_blank';link.rel = 'noopener noreferrer';container.appendChild(link);});}displayErrorWithRetry(errorMessage,type,dataType){const content = type === 'opportunities' ? document.getElementById('opportunitiesContent') : document.getElementById('resultsContent');const counter = type === 'opportunities' ? document.getElementById('opportunitiesCount') : document.getElementById('resultsCount');if (content){content.innerHTML = ` <div class="no-results"> ${errorMessage}<br><br> <button class="btn btn-secondary" onclick="retryLoad('${dataType}')">Try Again</button> </div> `;}if (counter){counter.textContent = 'Error';}}displayError(errorMessage,type){const content = type === 'opportunities' ? document.getElementById('opportunitiesContent') : document.getElementById('resultsContent');const counter = type === 'opportunities' ? document.getElementById('opportunitiesCount') : document.getElementById('resultsCount');if (content){content.innerHTML = `<div class="no-results">${errorMessage}</div>`;}if (counter){counter.textContent = 'Error';}}}let app;window.addEventListener('load',function(){try{app = new DatabaseApp();if (validateConfig()){console.warn('Google Sheets not configured - API credentials missing');}}catch (error){console.error('Error initializing app:',error);document.body.innerHTML = ` <div style="text-align: center;padding: 50px;font-family: 'Tajawal',Arial,sans-serif;max-width: 600px;margin: 0 auto;"> <h1 style="color: #1a472a;">🎵 Saudi Music Community Database</h1> <div style="background: #f0f0f0;padding: 20px;border-radius: 10px;margin: 20px 0;"> <p><strong>Loading Issue Detected</strong></p> <p>Please refresh this page or check your internet connection.</p> </div> </div> `;}});function switchTab(tabName){try{if (app) app.switchTab(tabName);}catch (error){console.error('Error switching tab:',error);}}function clearFilters(){try{if (app) app.clearFilters();}catch (error){console.error('Error clearing filters:',error);}}function retryLoad(dataType){try{if (app){if (dataType === 'artists'){app.loadAllArtists();}else if (dataType === 'opportunities'){app.loadAllOpportunities();}}}catch (error){console.error('Error retrying load:',error);}}